@model ContosoUniversity.ViewModels.LessonVM

@{
    ViewBag.Title = "Create Lesson";
}

<h2>Create Lesson</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="Form">
        <h4>Creation Lesson</h4>
        @if (TempData["CreateError"] != null)
        {
            <p class="text-danger"> @TempData["CreateError"] </p>
        }
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Course, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Course, new SelectList(Model.Course, "CourseID", "Title"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Course, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Day, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartHour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartHour, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartHour, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndHour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndHour, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndHour, "", new { @class = "text-danger" })
                <div class="alert-danger MessageError">
                    <strong> <span id="message1"> </span> </strong>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateStart, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
                <div class="alert-danger MessageError">
                    <strong> <span id="message2"> </span> </strong>
                </div>
                </div>
            </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="CreateButton" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#CreateButton").click(function (event) {
                var startHour = parseInt(($("#StartHour").val()).replace(":", ""));
                var endHour = parseInt(($("#EndHour").val()).replace(":", ""));
                var day = parseInt($("#Day").val());
                var startDate = (new Date(($("#DateStart").val())).getDay());

                if (startHour >= endHour) {
                    var message = $("#message1");
                    message.css("color", "red");
                    message.html("Be careful, there is a concordance issue between the start hour and the end hour");
                    event.preventDefault();
                }
                else {
                    $("#message1").empty();
                }

                if (startDate != (day + 1)) {
                    var message = $("#message2");
                    message.css("color", "red");
                    message.html("Be careful, there is a concordance issue between the selected day and the start day");
                    event.preventDefault();
                }
                else {
                    $("#message2").empty();
                }
            })
        })
    </script>
}

