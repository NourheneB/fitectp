@model ContosoUniversity.ViewModels.PersonVM

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstMidName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstMidName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstMidName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                <span id="message"> </span>
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="btn-group btn-group-toggle col-md-offset-2 col-md-10" data-toggle="buttons">
                <label class="btn btn-info active"> @Html.RadioButtonFor(model => model.Role, "Student") Student </label>
                <label class="btn btn-primary"> @Html.RadioButtonFor(model => model.Role, "Instructor") Instructor </label>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create account" class="btn btn-default" />
            </div>
        </div>

        @if (ViewBag.MessageSuccess != null)
        {
            <div class="alert alert-success">
                <strong> @ViewBag.MessageSuccess </strong>
            </div>
        }
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#Login").keyup(function () {
                var username = $("#Login").val();
                if (username.length >= 6) {
                    $.ajax({
                        type: "POST",
                        url: "/Account/CheckUsername",
                        data: '{username:"' + username + '" }',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {

                            var message = $("#message");
                            if (response == true) {
                                //Username is available.
                                message.css("color", "green");
                                message.html("That username is available");
                            }
                            else {
                                //Username is not available.
                                message.css("color", "red");
                                message.html("That username is already taken. Please choose another");
                            }
                        }
                    });
                }
                else {
                    var message = $("#message");
                    message.css("color", "red");
                    message.html("Your login should have at least six characters");
                }
            });
        });
    </script>
}